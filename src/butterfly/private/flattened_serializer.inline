#define MATCH_SIMPLE(hash_, decoder_, size_) \
case hash_: \
    ret.decoder = decoder_; \
    ret.size = size_; \
    break;

#define MATCH_OBJECT(hash_, object_, size_) \
case hash_: \
    ret.size = size_; \
    break;

#define MATCH_VECTOR(hash_, object_, size_) \
case hash_: \
    ret.decoder = prop_decode_dynamic; \
    ret.size = 100; \
    ret.is_dynamic = 1; \
    break;

// bool
MATCH_SIMPLE("bool"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("bool[4]"_chash, prop_decode_bool, 4)
MATCH_SIMPLE("bool[5]"_chash, prop_decode_bool, 5)
MATCH_SIMPLE("bool[9]"_chash, prop_decode_bool, 9)
MATCH_SIMPLE("bool[10]"_chash, prop_decode_bool, 10)
MATCH_SIMPLE("bool[24]"_chash, prop_decode_bool, 24)
MATCH_SIMPLE("bool[64]"_chash, prop_decode_bool, 64)
MATCH_SIMPLE("bool[66]"_chash, prop_decode_bool, 66)
MATCH_SIMPLE("bool[128]"_chash, prop_decode_bool, 128)
MATCH_SIMPLE("bool[256]"_chash, prop_decode_bool, 256)
MATCH_SIMPLE("bool[576]"_chash, prop_decode_bool, 576)
MATCH_SIMPLE("CLightComponent"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("CPhysicsComponent"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("CRenderComponent"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("CBodyComponent"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("CDOTAGameManager*"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("CDOTAGamerules*"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("CDOTASpectatorGraphManager*"_chash, prop_decode_bool, 0)
MATCH_SIMPLE("CEntityIdentity*"_chash, prop_decode_bool, 0)

// char
MATCH_SIMPLE("char"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[18]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[32]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[33]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[64]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[128]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[129]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[255]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[256]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[260]"_chash, prop_decode_string, 0)
MATCH_SIMPLE("char[512]"_chash, prop_decode_string, 0)

// string
MATCH_SIMPLE("CUtlString"_chash, prop_decode_string, 0)
MATCH_SIMPLE("CUtlSymbolLarge"_chash, prop_decode_string, 0)
MATCH_SIMPLE("CUtlSymbolLarge[10]"_chash, prop_decode_string, 10)

// dynamic lists
MATCH_VECTOR("CUtlVector< CAnimationLayer >"_chash, "CAnimationLayer", 1)
MATCH_VECTOR("CUtlVector< CDOTASubChallengeInfo >"_chash, "CDOTASubChallengeInfo", 1)
MATCH_VECTOR("CUtlVector< CDOTA_ItemStockInfo >"_chash, "CDOTA_ItemStockInfo", 1)
MATCH_VECTOR("CUtlVector< CDOTA_PlayerChallengeInfo >"_chash, "CDOTA_PlayerChallengeInfo", 1)
MATCH_VECTOR("CUtlVector< ClientQuickBuyItemState >"_chash, "ClientQuickBuyItemState", 1)
MATCH_VECTOR("CUtlVector< CEconItemAttribute >"_chash, "CEconItemAttribute", 1)
MATCH_VECTOR("CUtlVector< CHeroStatueLiked >"_chash, "CHeroStatueLiked", 1)
MATCH_VECTOR("CUtlVector< CHeroesPerPlayer >"_chash, "CHeroesPerPlayer", 1)
MATCH_VECTOR("CUtlVector< CShowcaseSlot >"_chash, "CShowcaseSlot", 1)
MATCH_VECTOR("CUtlVector< CNetworkedIKProceduralTargetContext >"_chash, "CNetworkedIKProceduralTargetContext", 1)
MATCH_VECTOR("CUtlVector< DataTeamPlayer_t >"_chash, "DataTeamPlayer_t", 1)
MATCH_VECTOR("CUtlVector< PlayerResourceBroadcasterData_t >"_chash, "PlayerResourceBroadcasterData_t", 1)
MATCH_VECTOR("CUtlVector< PlayerResourcePlayerData_t >"_chash, "PlayerResourcePlayerData_t", 1)
MATCH_VECTOR("CUtlVector< PlayerResourcePlayerEventData_t >"_chash, "PlayerResourcePlayerEventData_t", 1)
MATCH_VECTOR("CUtlVector< PlayerResourcePlayerTeamData_t >"_chash, "PlayerResourcePlayerTeamData_t", 1)
MATCH_VECTOR("CUtlVector< TempViewerInfo_t >"_chash, "TempViewerInfo_t", 1)
MATCH_VECTOR("CUtlVector< InGamePredictionData_t >"_chash, "InGamePredictionData_t", 1)
MATCH_SIMPLE("CUtlVector< CUtlSymbolLarge >"_chash, prop_decode_string, 10)
MATCH_VECTOR("DOTA_CombatLogQueryProgress"_chash, "DOTA_CombatLogQueryProgress", 1)
MATCH_VECTOR("DOTA_PlayerChallengeInfo"_chash, "DOTA_PlayerChallengeInfo", 1)
MATCH_SIMPLE("CUtlVector< CHandle< CBaseCombatWeapon > >"_chash, prop_decode_varint, 2)
MATCH_SIMPLE("CUtlVector< CHandle< CBaseEntity > >"_chash, prop_decode_varint, 10)
MATCH_SIMPLE("CUtlVector< CHandle< CBaseFlex > >"_chash, prop_decode_varint, 2)
MATCH_SIMPLE("CUtlVector< CHandle< CBasePlayer > >"_chash, prop_decode_varint, 64)
MATCH_SIMPLE("CUtlVector< CHandle< CEconWearable > >"_chash, prop_decode_varint, 100)
MATCH_SIMPLE("CUtlVector< CHandle< CIngameEvent_Base > >"_chash, prop_decode_varint, 2)
MATCH_VECTOR("CUtlVector< float32 >"_chash, prop_decode_float, 1)
MATCH_VECTOR("CUtlVector< int32 >"_chash, prop_decode_varint, 1)
MATCH_VECTOR("CUtlVector< uint8 >"_chash, prop_decode_varint, 1)
MATCH_VECTOR("CUtlVector< uint32 >"_chash, prop_decode_varint, 1)
MATCH_VECTOR("CUtlVector< Vector >"_chash, prop_decode_vector, 1)
MATCH_VECTOR("CUtlVector< bool >"_chash, prop_decode_bool, 1)
MATCH_VECTOR("CUtlVector< AABB_t >"_chash, "AABB_t", 10)
MATCH_VECTOR("CUtlVector< QAngle >"_chash, prop_decode_qangle, 0)

// float
MATCH_SIMPLE("float32"_chash, prop_decode_float, 0)
MATCH_SIMPLE("float32[2]"_chash, prop_decode_float, 2)
MATCH_SIMPLE("float32[3]"_chash, prop_decode_float, 3)
MATCH_SIMPLE("float32[5]"_chash, prop_decode_float, 5)
MATCH_SIMPLE("float32[10]"_chash, prop_decode_float, 10)
MATCH_SIMPLE("float32[14]"_chash, prop_decode_float, 14)
MATCH_SIMPLE("float32[20]"_chash, prop_decode_float, 20)
MATCH_SIMPLE("float32[24]"_chash, prop_decode_float, 24)
MATCH_SIMPLE("float32[150]"_chash, prop_decode_float, 150)

// quantized
MATCH_SIMPLE("CNetworkedQuantizedFloat"_chash, prop_decode_quantized, 0)

// specials
MATCH_OBJECT("CPlayerLocalData"_chash, "CPlayerLocalData", 0)
MATCH_VECTOR("m_SpeechBubbles"_chash, "m_SpeechBubbles", 1)
MATCH_OBJECT("ECNYBeastAbility[24]"_chash, "ECNYBeastAbility", 24)
MATCH_OBJECT("CBaseVRHandAttachmentHandle"_chash, "CBaseVRHandAttachmentHandle", 0)
MATCH_OBJECT("WeightedSuggestion_t[15]"_chash, "WeightedSuggestion_t", 15)

// vector[2d] / quaternion
MATCH_SIMPLE("Quaternion"_chash, prop_decode_quaternion, 0)
MATCH_SIMPLE("Vector"_chash, prop_decode_vector, 0)
MATCH_SIMPLE("Vector[32]"_chash, prop_decode_vector, 32)
MATCH_SIMPLE("Vector[4]"_chash, prop_decode_vector, 4)
MATCH_SIMPLE("Vector[8]"_chash, prop_decode_vector, 8)
MATCH_SIMPLE("Vector2D"_chash, prop_decode_vector2d, 0)
MATCH_SIMPLE("Vector2D[2]"_chash, prop_decode_vector2d, 2)

// qangle
MATCH_SIMPLE("QAngle"_chash, prop_decode_qangle, 0)
MATCH_SIMPLE("QAngle[32]"_chash, prop_decode_qangle, 32)

// varints
MATCH_SIMPLE("CEntityHandle"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("CGameSceneNodeHandle"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("HSequence"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("CUtlStringToken"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("Color"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("color32"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("CDOTA_AbilityDraftAbilityState[MAX_ABILITY_DRAFT_ABILITIES]"_chash, prop_decode_varint, 128)

// int8_t
MATCH_SIMPLE("int8"_chash, prop_decode_svarint, 0)

// int16_t
MATCH_SIMPLE("int16"_chash, prop_decode_svarint, 0)

// int32_t
MATCH_SIMPLE("int32"_chash, prop_decode_svarint, 0)
MATCH_SIMPLE("int32[2]"_chash, prop_decode_svarint, 2)
MATCH_SIMPLE("int32[4]"_chash, prop_decode_svarint, 4)
MATCH_SIMPLE("int32[5]"_chash, prop_decode_svarint, 5)
MATCH_SIMPLE("int32[9]"_chash, prop_decode_svarint, 9)
MATCH_SIMPLE("int32[10]"_chash, prop_decode_svarint, 10)
MATCH_SIMPLE("int32[12]"_chash, prop_decode_svarint, 12)
MATCH_SIMPLE("int32[13]"_chash, prop_decode_svarint, 13)
MATCH_SIMPLE("int32[14]"_chash, prop_decode_svarint, 14)
MATCH_SIMPLE("int32[15]"_chash, prop_decode_svarint, 15)
MATCH_SIMPLE("int32[16]"_chash, prop_decode_svarint, 16)
MATCH_SIMPLE("int32[24]"_chash, prop_decode_svarint, 24)
MATCH_SIMPLE("int32[30]"_chash, prop_decode_svarint, 30)
MATCH_SIMPLE("int32[50]"_chash, prop_decode_svarint, 100)
MATCH_SIMPLE("int32[64]"_chash, prop_decode_svarint, 64)
MATCH_SIMPLE("int32[66]"_chash, prop_decode_svarint, 66)
MATCH_SIMPLE("int32[99]"_chash, prop_decode_svarint, 99)
MATCH_SIMPLE("int32[100]"_chash, prop_decode_svarint, 100)
MATCH_SIMPLE("int32[400]"_chash, prop_decode_svarint, 100)

// int64_t
MATCH_SIMPLE("int64"_chash, prop_decode_svarint, 0)

// uint8_t
MATCH_SIMPLE("uint8"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("uint8[2]"_chash, prop_decode_varint, 2)
MATCH_SIMPLE("uint8[4]"_chash, prop_decode_varint, 4)
MATCH_SIMPLE("uint8[6]"_chash, prop_decode_varint, 6)
MATCH_SIMPLE("uint8[8]"_chash, prop_decode_varint, 8)
MATCH_SIMPLE("uint8[10]"_chash, prop_decode_varint, 10)
MATCH_SIMPLE("uint8[16]"_chash, prop_decode_varint, 16)
MATCH_SIMPLE("uint8[18]"_chash, prop_decode_varint, 18)
MATCH_SIMPLE("uint8[20]"_chash, prop_decode_varint, 20)
MATCH_SIMPLE("uint8[24]"_chash, prop_decode_varint, 24)
MATCH_SIMPLE("uint8[32]"_chash, prop_decode_varint, 32)
MATCH_SIMPLE("uint8[64]"_chash, prop_decode_varint, 64)
MATCH_SIMPLE("uint8[300]"_chash, prop_decode_varint, 300)

// uint16_t
MATCH_SIMPLE("uint16"_chash, prop_decode_varint, 0)

// uint32_t
MATCH_SIMPLE("uint32"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("uint32[10]"_chash, prop_decode_varint, 10)
MATCH_SIMPLE("uint32[32]"_chash, prop_decode_varint, 32)
MATCH_SIMPLE("uint32[66]"_chash, prop_decode_varint, 66)
MATCH_SIMPLE("uint32[300]"_chash, prop_decode_varint, 66)

// uint64_t
MATCH_SIMPLE("uint64"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("uint64[4]"_chash, prop_decode_varint, 4)
MATCH_SIMPLE("uint64[256]"_chash, prop_decode_varint, 256)
MATCH_SIMPLE("uint64[1024]"_chash, prop_decode_varint, 1024)

// itemid
MATCH_SIMPLE("itemid_t[10]"_chash, prop_decode_varint, 10)

// handles
MATCH_SIMPLE("CHandle< CBaseCombatCharacter >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CBaseCombatWeapon >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CBaseEntity >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CBaseEntity >[2]"_chash, prop_decode_varint, 2);
MATCH_SIMPLE("CHandle< CBaseEntity >[4]"_chash, prop_decode_varint, 4);
MATCH_SIMPLE("CHandle< CBaseEntity >[10]"_chash, prop_decode_varint, 10);
MATCH_SIMPLE("CHandle< CBaseEntity >[14]"_chash, prop_decode_varint, 14);
MATCH_SIMPLE("CHandle< CBaseEntity >[16]"_chash, prop_decode_varint, 16);
MATCH_SIMPLE("CHandle< CBaseEntity >[17]"_chash, prop_decode_varint, 17);
MATCH_SIMPLE("CHandle< CBaseEntity >[24]"_chash, prop_decode_varint, 24);
MATCH_SIMPLE("CHandle< CBaseEntity >[64]"_chash, prop_decode_varint, 64);
MATCH_SIMPLE("CHandle< CBaseModelEntity >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CBasePlayer >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CBasePropDoor >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CBaseVRHandAttachment >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CBaseViewModel >[2]"_chash, prop_decode_varint, 2);
MATCH_SIMPLE("CHandle< CColorCorrection >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CDOTAPlayer >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CDOTASpecGraphPlayerData >[24]"_chash, prop_decode_varint, 24);
MATCH_SIMPLE("CHandle< CDOTA_Ability_Meepo_DividedWeStand >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CDOTA_BaseNPC >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CDOTA_BaseNPC >[10]"_chash, prop_decode_varint, 10);
MATCH_SIMPLE("CHandle< CDOTA_BaseNPC_Hero >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CDOTA_Item >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CDotaSubquestBase >[8]"_chash, prop_decode_varint, 8);
MATCH_SIMPLE("CHandle< CFogController >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CPostProcessController >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CPropHMDAvatar >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CPropVRHand >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CPropVRHand >[2]"_chash, prop_decode_varint, 2);
MATCH_SIMPLE("CHandle< CPropVRHand >[4]"_chash, prop_decode_varint, 4);
MATCH_SIMPLE("CHandle< CPropZipline >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CPointHMDAnchor >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CPointWorldText >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CHandle< CIngameEvent_Base >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CStrongHandle< InfoForResourceTypeCModel >"_chash, prop_decode_resource, 0);
MATCH_SIMPLE("CStrongHandle< InfoForResourceTypeCPostProcessingResource >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CStrongHandle< InfoForResourceTypeCTextureBase >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CStrongHandle< InfoForResourceTypeIMaterial2 >"_chash, prop_decode_varint, 0);
MATCH_SIMPLE("CStrongHandle< InfoForResourceTypeIMaterial2 >[6]"_chash, prop_decode_varint, 6);
MATCH_SIMPLE("CStrongHandle< InfoForResourceTypeIParticleSystemDefinition >"_chash, prop_decode_resource, 0);

// enum
MATCH_SIMPLE("eLiteralHandType"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("attributeprovidertypes_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("gender_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("item_definition_index_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("itemid_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("style_index_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("BeamClipStyle_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("BeamType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("CourierState_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("DoorState_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("DOTATeam_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("DOTATurboHeroPickRulesPhase_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("DOTA_HeroPickState"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("DOTA_SHOP_TYPE"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("DamageOptions_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("EShowcaseEditorMode"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ETeamShowcase_SlotType"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ERoshanSpawnPhase"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("EntityDisolveType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("MaterialModifyMode_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("MoveCollide_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("MoveType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("PointWorldTextJustifyHorizontal_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("PointWorldTextJustifyVertical_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("PointWorldTextReorientMode_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("PoseController_FModType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("PrecipitationType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("RenderFx_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("RenderMode_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ScreenEffectType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ShopItemViewMode_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("SolidType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("SurroundingBoundsType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ValueRemapperHapticsType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ValueRemapperInputType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ValueRemapperMomentumType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ValueRemapperOutputType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("ValueRemapperRatchetType_t"_chash, prop_decode_varint, 0)
MATCH_SIMPLE("WeaponState_t"_chash, prop_decode_varint, 0)

#undef MATCH_SIMPLE